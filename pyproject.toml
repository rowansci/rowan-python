[project]
name = "rowan-python"
version = "2.1.0"
description = "Rowan Python Library"
readme = "README.md"
requires-python = ">=3.9"
authors = [
    { name = "Corin Wagen", email = "corin@rowansci.com" },
]
dependencies = [
    "httpx",
    "stjames>=0.0.83",
    "setuptools",
    "rdkit",
    "nest-asyncio",
]

[project.urls]
"Homepage" = "https://github.com/rowansci/rowan-client"
"Bug Tracker" = "https://github.com/rowansci/rowan-client/issues"

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-arm64"]

[tool.pixi.pypi-dependencies]
rowan-python = { path = ".", editable = true }
# Autopopulated from [project.dependencies], see https://pixi.sh/latest/advanced/pyproject_toml/#dependency-section

[tool.pixi.feature.dev.pypi-dependencies]
pytest = ">=7.0"
pytest-cov = ">=5.0"
ruff = ">=0.5"
mypy = ">=1.10"
pre-commit = ">=3.7"
ipython = "*"
rdkit-stubs = ">=0.7"
mkdocs-material = "*"
mkdocstrings-python = "*"
griffe-pydantic = "*"

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev"], solve-group = "default"}

[tool.pixi.feature.dev.tasks]
fmt = { cmd="ruff format ." }
lint = { cmd="ruff check . --fix" }
types = { cmd="mypy ." }
test = { cmd="pytest" }
mkdocs-serve = { cmd="mkdocs serve" }
mkdocs-build = { cmd="mkdocs build --clean" }
all = { depends-on = ["fmt", "lint", "types", "test"] }

[tool.ruff]
line-length = 100
exclude = ["*.ipynb"]

[tool.ruff.lint]
select = [
    "B",  # bugbear
    "D",  # pydocstyle
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming conventions
    "W",  # pycodestyle warnings
    "C4", # comprehensions
    "PL", # pylint
    "RUF", # Ruff-specific rules
    "RSE", # flake8-raise
    "ICN001", # unconventional-import-alias
]
ignore = [
    "E741",  # Ambiguous variable name
    "N806", # Non-lowercase variable in function
    "N816", # Non-lowercase global variables
    "PLR2004", # Magic value used in comparison
    "PLR0911", # Too many returns
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments to function call
    "PLR0914", # Too many locals
    "PLR0915", # Too many statements
    "PLR1702", # Too many nested-blocks
    "PLW2901", # Redifined loop name
    "PLW1514", # Unspecified text encoding
    "RUF001",  # String contains ambiguous dash (en or em dash)
    "RUF002",  # Docstring contains ambiguous dash (en or em dash)
    "RUF003",  # String contains ambiguous unicode character
    "PLC0206", # Extracting value from dictionary without calling `.items()`
    "PLC0415",

    # To remove
    #"B905",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D200",
    "D202",
    "D205",
    "D400",
    "D401",
    "N801",
    "N802",
    "N803",
    "PLW1508",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.mypy]
exclude = ["scripts", "benchmark", "build", "subrepos/stjames/tests", "subrepos/aimnet2calc", "feature", "examples"]
plugins = ["pydantic.mypy"]
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "rdkit-stubs.*"
ignore_errors = true

[tool.pytest.ini_options]
testpaths = ["test", "rowan"]
addopts = "--doctest-modules --durations=5"
doctest_optionflags = "NORMALIZE_WHITESPACE"

[tool.hatch.build.targets.wheel]
packages = ["rowan"]
